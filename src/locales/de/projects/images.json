{
  "id": "images",
  "title": "Bildersuche Galerie",
  "description": "Vanilla-JavaScript-Anwendung zur Bildsuche und Anzeige in einer Galerieansicht",
  "stack": "Vanilla JavaScript, Pixabay API, SimpleLightbox, Notiflix, Parcel",
  "link": "https://github.com/VikaSemenchuk/goit-js-hw-11",
  "image": "/projects/images.png",
  "featured": true,
  "role": "Frontend-Entwicklerin",
  "detailed": {
    "overview": "Image Search Gallery ist eine Vanilla-JavaScript-Anwendung, die es Nutzer:innen ermöglicht, hochwertige Bilder über die Pixabay API zu suchen. Das Projekt umfasst eine Endlos-Scroll-Funktion mit Paginierung, eine Lightbox-Galerie und ein responsives Grid-Layout. Es wurde ohne Frameworks entwickelt, um reine JavaScript-Fähigkeiten und moderne Webentwicklungstechniken zu demonstrieren.",
    "myRole": "Ich habe die komplette Frontend-Anwendung mit Vanilla JavaScript und modernen ES6+ Features entwickelt. Die API-Integration mit Pixabay, responsive UI-Komponenten, Lightbox-Funktionalität sowie Ladezustände und Fehlerbehandlung wurden von mir umgesetzt. Der Fokus lag auf sauberer, modularer Codearchitektur ohne Frameworks.",
    "technologies": {
      "frontend": [
        "Vanilla JavaScript ES6+ — moderne JavaScript-Funktionen und Syntax",
        "HTML5 & CSS3 — semantisches Markup und modernes Styling",
        "SCSS — CSS-Präprozessor für bessere Stilstrukturierung",
        "Parcel — moderner Build-Tool zur Optimierung",
        "Modern Normalize — einheitliches Styling in allen Browsern"
      ],
      "libraries": [
        "Axios — HTTP-Client für API-Anfragen",
        "SimpleLightbox — elegante Galerie mit Lightbox-Funktion",
        "Notiflix — benutzerfreundliche Benachrichtigungen",
        "Pixabay API — qualitativ hochwertige Bildsuche"
      ],
      "architecture": [
        "Modulare JavaScript-Architektur mit ES6-Klassen",
        "Trennung der Verantwortlichkeiten durch Service-Klassen",
        "Eventgesteuerte Programmierung mit sauberem Event-Handling",
        "Responsives Grid-Layout mit CSS Grid und Flexbox",
        "Progressive Enhancement und Ausfallsicherheit"
      ]
    },
    "features": [
      {
        "title": "Bildsuche & Entdeckung",
        "description": "Suche nach hochwertigen Bildern mittels Schlüsselwörtern, Anzeige in einem responsiven Grid, automatische Bildoptimierung und Lazy Loading, flüssiges endloses Scrollen"
      },
      {
        "title": "Galerie-Erlebnis",
        "description": "Lightbox-Galerie mit Navigationssteuerung, Vollbildanzeige mit Zoomfunktion, Tastaturnavigation, Anzeige von Bild-Metadaten (Likes, Aufrufe, Downloads, Kommentare)"
      },
      {
        "title": "Benutzeroberfläche & UX",
        "description": "Sauberes, responsives Design für alle Geräte, Ladeanimationen und Benutzer-Feedback, Fehlermeldungen mit hilfreichen Hinweisen, weiche Übergänge und Hover-Effekte"
      },
      {
        "title": "Performance & Optimierung",
        "description": "Effiziente API-Aufrufe mit Paginierung, Lazy Loading von Bildern für bessere Performance, Debounced Search zur Reduzierung von API-Aufrufen, optimierte Bundle-Größe mit Parcel"
      }
    ],
    "achievements": [
      "Vollständig funktionierende Bildsuchanwendung mit reinem JavaScript erstellt",
      "Effiziente Paginierung mit Endlos-Scroll-Funktionalität implementiert",
      "Responsives Design, das auf allen Geräten reibungslos funktioniert",
      "Externe API mit Fehlerbehandlung und Limitierung integriert",
      "Geschmeidiges Benutzererlebnis mit Ladezuständen und Animationen",
      "Saubere, modulare Code-Struktur ohne Frameworks eingehalten"
    ],
    "stats": {
      "jsClasses": "3",
      "apiEndpoints": "1",
      "responsiveBreakpoints": "3",
      "imagesPerPage": "40",
      "bundleSize": "< 100KB"
    },
    "codeExamples": {
      "apiService": "...",
      "loadMoreButton": "...",
      "imageMarkup": "..."
    }
  }
}
