{
  "id": "news",
  "title": "Nachrichtenportal",
  "description": "Umfassende Nachrichtenplattform mit Kategoriefiltern und Personalisierungsfunktionen",
  "stack": "Vanilla JavaScript, SCSS, Parcel, New York Times API, OpenWeather API",
  "link": "https://github.com/Yermolinn/News",
  "image": "/projects/news.png",
  "featured": true,
  "role": "Frontend-Entwicklerin & Teammitglied",
  "detailed": {
    "overview": "News Portal ist eine umfangreiche Nachrichtenplattform, die Artikel über die New York Times API abruft. Sie bietet Kategoriefilterung, Suchfunktionen, Wetterintegration und persönliche Leselisten. Als Teamprojekt mit Vanilla JavaScript zeigt es fortgeschrittene Frontend-Fähigkeiten wie API-Integration, lokale Speicherung und responsives Design.",
    "myRole": "Ich war als Frontend-Entwicklerin in einem Team aktiv. Entwickelte Kernfunktionen wie Nachrichtenanzeige, Verwaltung von Favoriten und Gelesenem über LocalStorage, responsive UI-Komponenten und API-Integration. Teilnahme an Code-Reviews, Architekturentscheidungen und Sicherstellung der Codequalität.",
    "technologies": {
      "frontend": [
        "Vanilla JavaScript ES6+ — moderne Klassen und Module",
        "SCSS — fortgeschrittenes CSS mit Mixins und Variablen",
        "HTML5 — semantisches Markup mit Fokus auf Barrierefreiheit",
        "Parcel — Build-Tool für Entwicklung und Optimierung",
        "Flatpickr — eleganter Datumswähler zur Filterung"
      ],
      "apis": [
        "New York Times API — Artikeldaten und Suche",
        "OpenWeather API — aktuelles Wetter und Wochenvorhersage",
        "Mehrere NYT-Endpunkte — Artikel, Kategorien, Suche"
      ],
      "architecture": [
        "Modulare JavaScript-Architektur mit ES6-Modulen",
        "Komponentenbasierte UI ohne Frameworks",
        "LocalStorage-Management für Benutzereinstellungen",
        "Responsives Design im Mobile-First-Ansatz",
        "PWA-Funktionen und Offline-Unterstützung"
      ]
    },
    "features": [
      {
        "title": "Nachrichtenübersicht & Suche",
        "description": "Blättere durch Trendartikel, suche nach Inhalten, filtere nach Kategorien und Datum mit Kalenderunterstützung"
      },
      {
        "title": "Personalisierung",
        "description": "Artikel zu Favoriten hinzufügen, Leseverlauf verfolgen, gelesene Artikel nach Datum organisieren, Speicherung mit LocalStorage"
      },
      {
        "title": "Optimiertes Benutzererlebnis",
        "description": "Wetter-Widget mit aktueller Lage und Vorschau, Licht/Dunkel-Modus mit gespeicherten Präferenzen, Pagination und responsives Design"
      },
      {
        "title": "Erweiterte Funktionen",
        "description": "Integration mehrerer APIs mit Fehlerbehandlung, Lazy Loading und Infinite Scroll, erweiterte Filter und Sortierung, Animationen und Übergänge"
      }
    ],
    "achievements": [
      "Mitwirkung an einem komplexen Teamprojekt mit mehreren Entwickler:innen",
      "Robustes LocalStorage-System zur Datenspeicherung implementiert",
      "Responsives Design für alle Gerätegrößen erstellt",
      "Mehrere APIs integriert mit zuverlässigem Fallback",
      "Effiziente Pagination- und Filterfunktionen entwickelt",
      "Hohe Codequalität und konsistenter Teamstandard eingehalten"
    ],
    "stats": {
      "teamSize": "4+",
      "apiEndpoints": "8+",
      "components": "20+",
      "pages": "3",
      "features": "15+"
    },
    "codeExamples": {
      "apiService": "...",
      "localStorage": "...",
      "weatherWidget": "..."
    }
  }
}
