{
  "greeting": "Hi!",
  "header": {
    "nav": {
      "home": "Home",
      "about": "About",
      "projects": "Projects",
      "path-to-it": "Path to IT",
      "documents": "CV & documents"
    }
  },
  "documents": "CV & documents",
  "theme": "Theme",
  "language": "Language",
  "home-page": "This is the home page",
  "projects-page": "This is the projects page",
  "path-to-it-page": "Here is my path to IT",
  "hero": {
    "photoAlt": "Photo of Viktoriia, web developer",
    "title": "Fullstack developer with an engineering mindset",
    "subtitle": "With an analytical background, I’ve transitioned from finance to development. I work with JavaScript, TypeScript, React, and Node.js to build meaningful solutions.",
    "button-to-about": "Learn more"
  },
  "about-page": {
    "title": "About me",
    "intro": "I’m a full-stack developer at the beginning of my career, passionate about innovation, teamwork, and lifelong learning. A harmonious work environment motivates me, and I see constructive feedback as an opportunity to grow and achieve better results together.",
    "contacts": {
      "email": "Viktoriia.semenchuk.dev@gmail.com",
      "github": "https://github.com/VikaSemenchuk",
      "linkedin": "https://www.linkedin.com/in/viktoriia-semenchuk-fullstack-developer"
    },
    "skills": {
      "tech-skills-title": "Tech Skills",
      "technical": [
        "HTML5, CSS3 / SASS, responsive layout",
        "JavaScript, TypeScript, React",
        "Rest API, Node.js, MongoDB, Mongoose",
        "Vite, Parcel, Webpack",
        "GIT"
      ],
      "soft-skills-title": "Soft Skills",
      "soft": [
        "Responsibility",
        "Teamwork",
        "Communication",
        "Problem-solving"
      ],
      "languages-title": "Languages",
      "languages": [
        "Ukrainian — native",
        "German — B2",
        "English — intermediate"
      ]
    },
    "education-title": "Education",
    "education": [
      {
        "program": "Fullstack Developer Course",
        "institution": "GoIT, Kyiv",
        "dates": "08/2022 – 08/2023"
      },
      {
        "program": "Master’s in Accounting",
        "institution": "TNEU, Chernivtsi",
        "dates": "2007 – 2012"
      }
    ]
  },
   "my-projects": "My Projects",
  "all-projects": "All Projects",
   "projects": [
    {
      "id": "pets",
      "title": "Your Pet / Backend",
      "description": "Backend for pet service",
      "stack": "Node.js, MongoDB, Mongoose, Swagger, Express, JWT",
      "link": "https://github.com/VikaSemenchuk/yourPets-backend",
      "image": "/projects/pets.png",
      "featured": true,
      "role": "Team Lead & Backend Developer",
      "detailed": {
        "overview": "YourPets is a full-featured web platform for searching and posting pet adoption ads, developed as a graduation project for the GoIT course. The project connects pet owners looking for new homes for their beloved animals with people who want to adopt a pet. Built using modern technologies and real business requirements.",
        "myRole": "Led a team of 4+ developers in the GoIT final project, coordinated work between frontend and backend, responsible for project architecture, code review, task distribution and quality control. Personally developed the backend: REST API, MongoDB, authentication, Cloudinary integration. The project was executed according to real technical requirements following industry standards.",
        "technologies": {
          "backend": [
            "Node.js + Express.js — server-side and API",
            "MongoDB + Mongoose — database and ODM",
            "JWT — authentication and authorization",
            "bcrypt — password hashing",
            "Cloudinary — image storage and processing",
            "Multer — file uploads"
          ],
          "architecture": [
            "RESTful API with thoughtful endpoint structure",
            "Middleware pattern for authentication and validation",
            "Error handling with centralized error processing",
            "Pagination for optimizing large lists",
            "Search & Filtering with flexible parameters"
          ],
          "dataManagement": [
            "MongoDB Aggregation Pipeline for complex queries",
            "Schema Design with validation and indexes",
            "File Upload with automatic image optimization",
            "Data Relationships between users, pets, and notices"
          ]
        },
        "features": [
          {
            "title": "User System",
            "description": "Registration and authorization with JWT tokens, user profile with editing capabilities, avatar upload and change, secure password storage with bcrypt"
          },
          {
            "title": "Notice Management",
            "description": "CRUD operations for pet notices, categories: sell, free, lost-found, filtering by gender, age, location, search by title and pet type"
          },
          {
            "title": "Personal Pets",
            "description": "Adding personal pets, photo gallery, information about age, type, comments"
          },
          {
            "title": "Additional Modules",
            "description": "Partner organizations catalog, pet news with search, pagination for all lists"
          }
        ],
        "achievements": [
          "Led a team of 4+ developers, ensuring frontend/backend synchronization",
          "Organized code review process and established code quality standards",
          "Designed the architecture of the entire project and distributed tasks among the team",
          "Implemented complex backend system with 15+ endpoints and integrations",
          "Ensured deadline adherence and successful product deployment",
          "Created detailed technical documentation and API specification"
        ],
        "stats": {
          "teamSize": "4+",
          "endpoints": "15+",
          "modules": "5",
          "filterParams": "8+",
          "coverage": "100%"
        },
        "codeExamples": {
          "aggregation": "const pipeline = [\n  { $match: { category: \"sell\", sex: \"female\" } },\n  { $skip: skip },\n  { $limit: limit },\n  { $sort: { createdAt: -1 } }\n];\n\nconst noticesList = await Notice.aggregate(pipeline);",
          "cloudinary": "const storage = new CloudinaryStorage({\n  cloudinary: cloudinary,\n  params: {\n    folder: \"petsshop\",\n    transformation: [{ width: 500, height: 500 }]\n  }\n});",
          "middleware": "const authenticate = async (req, res, next) => {\n  const { authorization = '' } = req.headers;\n  const [bearer, token] = authorization.split(' ');\n  \n  if (bearer !== 'Bearer' || !token) {\n    return res.status(401).json({ message: \"Not authorized\" });\n  }\n  \n  try {\n    const { id } = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(id);\n    req.user = user;\n    next();\n  } catch (err) {\n    res.status(401).json({ message: \"Invalid token\" });\n  }\n};"
        }
      }
    },
    {
      "title": "News",
      "description": "Responsive news feed",
      "stack": "HTML, SASS, JS, Rest API, AJAX, Parcel",
      "link": "https://github.com/VikaSemenchuk/News",
      "image": "/projects/news.png"

    },
    {
      "title": "Search Images",
      "description": "Image search via API",
      "stack": "HTML, SASS, JS, Rest API, AJAX, Parcel",
      "link": "https://github.com/VikaSemenchuk/goit-js-hw-11",
      "image": "/projects/images.png"

    }
  ]
}
