{
  "greeting": "Hallo!",
  "header": {
    "nav": {
      "home": "Startseite",
      "about": "Über mich",
      "projects": "Projekte",
      "path-to-it": "Weg in die IT",
      "documents": "Bewerbungsunterlagen"
    }
  },
  "documents": "Bewerbungsunterlagen",
  "theme": "Thema",
  "language": "Sprache",
  "home-page": "Das ist die Startseite",
  "projects-page": "Das ist die Projekteseite",
  "path-to-it-page": "Hier geht es um meinen Weg in die IT",
  "hero": {
    "photoAlt": "Foto von Viktoriia, Webentwicklerin",
    "title": "Fullstack-Entwicklerin mit technischem Denken",
    "subtitle": "Mit analytischem Hintergrund bin ich von der Finanzwelt in die Entwicklung gewechselt. Ich arbeite mit JavaScript, TypeScript, React und Node.js und entwickle sinnvolle Lösungen.",
    "button-to-about": "Mehr erfahren"
  },
  "about-page": {
  "title": "Über mich",
  "intro": "Ich bin eine Fullstack-Entwicklerin am Anfang meiner Karriere, begeistert von Innovation, Teamarbeit und lebenslangem Lernen. Eine harmonische Arbeitsumgebung motiviert mich, und konstruktives Feedback sehe ich als eine Chance zu wachsen und gemeinsam bessere Ergebnisse zu erzielen.",
  "contacts": {
    "email": "Viktoriia.semenchuk.dev@gmail.com",
    "github": "https://github.com/VikaSemenchuk",
    "linkedin": "https://www.linkedin.com/in/viktoriia-semenchuk-fullstack-developer"
  },
  "skills": {
    "tech-skills-title": "Technische Fähigkeiten",
    "technical": [
      "HTML5, CSS3 / SASS, responsives Layout",
      "JavaScript, TypeScript, React",
      "Rest API, Node.js, MongoDB, Mongoose",
      "Vite, Parcel, Webpack",
      "GIT"
    ],
    "soft-skills-title": "Soft Skills",
    "soft": [
      "Verantwortungsbewusstsein",
      "Teamarbeit",
      "Kommunikationsfähigkeit",
      "Problemlösungsfähigkeiten"
    ],
    "languages-title": "Sprachen",
    "languages": [
      "Ukrainisch — Muttersprache",
      "Deutsch — B2",
      "Englisch — Mittelstufe"
    ]
  },
  "education-title": "Ausbildung",
  "education": [
    {
      "program": "Fullstack-Entwicklungskurs",
      "institution": "GoIT, Kiew",
      "dates": "08/2022 – 08/2023"
    },
    {
      "program": "Master in Rechnungswesen",
      "institution": "TNEU, Czernowitz",
      "dates": "2007 – 2012"
    }
  ]
}
,
   "my-projects": "Meine Projekte",
  "all-projects": "Alle Projekte",
   "projects": [
    {
      "id": "pets",
      "title": "Your Pet / Backend",
      "description": "Backend für Haustier-Service",
      "stack": "Node.js, MongoDB, Mongoose, Swagger, Express, JWT",
      "link": "https://github.com/VikaSemenchuk/yourPets-backend",
      "image": "/projects/pets.png",
      "featured": true,
      "role": "Team Lead & Backend Developer",
      "detailed": {
        "overview": "YourPets ist eine voll funktionsfähige Web-Plattform für die Suche und Veröffentlichung von Haustier-Adoptionsanzeigen, entwickelt als Abschlussprojekt des GoIT-Kurses. Das Projekt verbindet Haustierbesitzer, die neue Zuhause für ihre geliebten Tiere suchen, mit Menschen, die ein Haustier adoptieren möchten. Erstellt mit modernen Technologien und realen Geschäftsanforderungen.",
        "myRole": "Leitete ein Team von 4+ Entwicklern im GoIT-Abschlussprojekt, koordinierte die Arbeit zwischen Frontend und Backend, verantwortlich für Projektarchitektur, Code Review, Aufgabenverteilung und Qualitätskontrolle. Persönlich entwickelte das Backend: REST API, MongoDB, Authentifizierung, Cloudinary-Integration. Das Projekt wurde nach realen technischen Anforderungen unter Einhaltung von Industriestandards durchgeführt.",
        "technologies": {
          "backend": [
            "Node.js + Express.js — Server-Seite und API",
            "MongoDB + Mongoose — Datenbank und ODM",
            "JWT — Authentifizierung und Autorisierung",
            "bcrypt — Passwort-Hashing",
            "Cloudinary — Bildspeicherung und -verarbeitung",
            "Multer — Datei-Uploads"
          ],
          "architecture": [
            "RESTful API mit durchdachter Endpoint-Struktur",
            "Middleware-Pattern für Authentifizierung und Validierung",
            "Error Handling mit zentralisierter Fehlerbehandlung",
            "Pagination für die Optimierung großer Listen",
            "Search & Filtering mit flexiblen Parametern"
          ],
          "dataManagement": [
            "MongoDB Aggregation Pipeline für komplexe Abfragen",
            "Schema Design mit Validierung und Indizes",
            "File Upload mit automatischer Bildoptimierung",
            "Data Relationships zwischen Benutzern, Haustieren und Anzeigen"
          ]
        },
        "features": [
          {
            "title": "Benutzersystem",
            "description": "Registrierung und Autorisierung mit JWT-Tokens, Benutzerprofil mit Bearbeitungsmöglichkeiten, Avatar-Upload und -änderung, sichere Passwort-Speicherung mit bcrypt"
          },
          {
            "title": "Anzeigenverwaltung",
            "description": "CRUD-Operationen für Haustier-Anzeigen, Kategorien: Verkauf, kostenlos, verloren-gefunden, Filterung nach Geschlecht, Alter, Standort, Suche nach Titel und Haustiertyp"
          },
          {
            "title": "Persönliche Haustiere",
            "description": "Hinzufügen persönlicher Haustiere, Foto-Galerie, Informationen über Alter, Typ, Kommentare"
          },
          {
            "title": "Zusätzliche Module",
            "description": "Partner-Organisationskatalog, Haustier-News mit Suche, Pagination für alle Listen"
          }
        ],
        "achievements": [
          "Leitete ein Team von 4+ Entwicklern und sorgte für Frontend/Backend-Synchronisation",
          "Organisierte Code-Review-Prozess und etablierte Code-Qualitätsstandards",
          "Entwarf die Architektur des gesamten Projekts und verteilte Aufgaben im Team",
          "Implementierte komplexes Backend-System mit 15+ Endpoints und Integrationen",
          "Stellte Einhaltung von Deadlines und erfolgreichen Produktdeploy sicher",
          "Erstellte detaillierte technische Dokumentation und API-Spezifikation"
        ],
        "stats": {
          "teamSize": "4+",
          "endpoints": "15+",
          "modules": "5",
          "filterParams": "8+",
          "coverage": "100%"
        },
        "codeExamples": {
          "aggregation": "const pipeline = [\n  { $match: { category: \"sell\", sex: \"female\" } },\n  { $skip: skip },\n  { $limit: limit },\n  { $sort: { createdAt: -1 } }\n];\n\nconst noticesList = await Notice.aggregate(pipeline);",
          "cloudinary": "const storage = new CloudinaryStorage({\n  cloudinary: cloudinary,\n  params: {\n    folder: \"petsshop\",\n    transformation: [{ width: 500, height: 500 }]\n  }\n});",
          "middleware": "const authenticate = async (req, res, next) => {\n  const { authorization = '' } = req.headers;\n  const [bearer, token] = authorization.split(' ');\n  \n  if (bearer !== 'Bearer' || !token) {\n    return res.status(401).json({ message: \"Not authorized\" });\n  }\n  \n  try {\n    const { id } = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(id);\n    req.user = user;\n    next();\n  } catch (err) {\n    res.status(401).json({ message: \"Invalid token\" });\n  }\n};"
        }
      }
    },
    {
      "title": "News",
      "description": "Anpassbarer Nachrichten-Feed",
      "stack": "HTML, SASS, JS, Rest API, AJAX, Parcel",
      "link": "https://github.com/VikaSemenchuk/News",
      "image": "/projects/news.png"

    },
    {
      "title": "Search Images",
      "description": "Bildersuche über API",
      "stack": "HTML, SASS, JS, Rest API, AJAX, Parcel",
      "link": "https://github.com/VikaSemenchuk/goit-js-hw-11",
      "image": "/projects/images.png"

    }
  ]
}
